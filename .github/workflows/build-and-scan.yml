name: Build and Scan APK with MobSF

on:
  push:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APK
        run: |
            cd android
            ./gradlew assembleRelease

      - name: Upload to MobSF and Scan
        env:
          MOBSF_API_KEY: ${{ secrets.MOBSF_API_KEY }}
          MOBSF_URL: https://d409698740f5.ngrok-free.app
        run: |
          APK_PATH=android/app/build/outputs/apk/release/app-release.apk

          echo "Uploading APK to MobSF..."
          RESPONSE=$(curl -s -X POST "$MOBSF_URL/api/v1/upload" \
            -H "Authorization: $MOBSF_API_KEY" \
            -F "file=@$APK_PATH")

          SCAN_HASH=$(echo $RESPONSE | jq -r .hash)
          echo "Scan hash: $SCAN_HASH"

          echo "Triggering scan..."
          curl -s -X POST "$MOBSF_URL/api/v1/scan" \
            -H "Authorization: $MOBSF_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"hash\":\"$SCAN_HASH\"}"

          echo "Downloading scan report..."
          curl -s -X POST "$MOBSF_URL/api/v1/report_json" \
            -H "Authorization: $MOBSF_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"hash\":\"$SCAN_HASH\"}" > mobsf_result.json

      - name: Upload MobSF Report as Artifact
        uses: actions/upload-artifact@v4  # âœ… use v4 instead of deprecated v3
        with:
          name: mobsf-json-report
          path: mobsf_result.json
